.TH "nyx" "1" "March 6, 2019" "nyx user manual" ""
.SH NAME
.PP
nyx \- the lean, docker\-optimized linux process monitor
.SH SYNOPSIS
.PP
nyx \-c [\f[I]config\-file\f[]] [\f[I]options\f[]]...
.PP
nyx \-\-run [\f[I]command\f[]]
.PP
nyx [\f[I]command\f[]] [\f[I]argument\f[]]...
.SH DESCRIPTION
.PP
nyx is a linux process monitor that intents to ease the monitoring of
your applications.
You are able to configure multiple applications to be watched by the nyx
server.
The configuration is done via the \f[I]config\-file\f[] argument and is
expected to be a valid YAML file.
.PP
If no \f[I]config\-file\f[] is specified the executable works as a
command line interface to the (running) nyx server process.
That way you are able to control your application status\[aq] like
starting/stopping an instance of your application.
.SH OPTIONS
.TP
.B \-c \f[I]config\-file\f[], \-\-config=\f[I]config\-file\f[]
Specify the YAML configuration which results in nyx to be run in
server (daemon) mode.
.RS
.RE
.TP
.B \-\-run=\f[I]command\f[]
Pass a command that should be watched instead of specifying a
configuration file.
This is a simple shortcut to watch an application with the default
options in an \[aq]adhoc\[aq] fashion.
.RS
.RE
.TP
.B \-\-local
Start the nyx daemon in a directory-local mode based on the current
working directory.
You may connect to such a nyx instance only inside that specific
directory in contrast to nyx's usual 'system-wide' behavior.
All configured directories of executables and arguments are evaluated
based on that specific directory as well.
.RS
.RE
.TP
.B \-p, \-\-passive
Start nyx in passive-mode meaning processes won't be automatically
started on startup.
.RS
.RE
.TP
.B \-s, \-\-syslog
Activate logging via the syslog.
.RS
.RE
.TP
.B \-D, \-\-no\-daemon
Do not daemonize the nyx server process but run in foreground instead.
This is especially useful to inspect/debug your application\[aq]s
runtime behavior.
.RS
.RE
.TP
.B \-q, \-\-quiet
Log error messages only.
.RS
.RE
.TP
.B \-C, \-\-no\-color
No terminal output coloring.
.RS
.RE
.TP
.B \-V, \-\-version
Print the version information.
.RS
.RE
.TP
.B \-h, \-\-help
Display a short help.
.RS
.RE
.SH COMMANDS
.PP
The following commands are available to control your configured
applications using the nyx command line interface:
.TP
.B ping
Ping the running nyx server.
.RS
.RE
.TP
.B version
Request the nyx server version.
.RS
.RE
.TP
.B status \f[I]watch\f[]
Get the current status of the specified \f[I]watch\f[].
.RS
.RE
.TP
.B start \f[I]watch\f[]
Start the specified \f[I]watch\f[].
.RS
.RE
.TP
.B stop \f[I]watch\f[]
Stop the specified \f[I]watch\f[].
.RS
.RE
.TP
.B restart \f[I]watch\f[]
Restart the specified \f[I]watch\f[].
.RS
.RE
.TP
.B history \f[I]watch\f[]
Get the latest events of the specified \f[I]watch\f[].
.RS
.RE
.TP
.B config \f[I]watch\f[]
Print the configuration of the specified \f[I]watch\f[].
.RS
.RE
.TP
.B watches
Get all currently configured watches.
.RS
.RE
.TP
.B reload
Reload the nyx configuration.
.RS
.RE
.TP
.B terminate
Terminate the nyx server instance.
.RS
.RE
.TP
.B quit
Stop the nyx server and all watched processes.
.RS
.RE
.SH CONFIGURATION
.PP
The configuration is expected in form of a \f[I]YAML\f[] file.
An example could look like the following:
.IP
.nf
\f[C]
watches:
\ \ mongodb:
\ \ \ \ start:\ mongod\ \-f\ /etc/mongod.conf
\ \ \ \ uid:\ mongod
\ \ \ \ gid:\ mongod
\ \ \ \ dir:\ /var/lib/mongod
\f[]
.fi
.PP
You may specify the \f[I]start\f[] config value in form of a list as
well (which is especially useful with arguments containing whitespace):
.IP
.nf
\f[C]
watches:
\ \ mongodb:
\ \ \ \ start:\ [
\ \ \ \ \ \ \[aq]mongod\[aq],
\ \ \ \ \ \ \[aq]\-f\[aq],
\ \ \ \ \ \ \[aq]/etc/mongod.conf\[aq]
\ \ \ \ \ \ ]
\f[]
.fi
.PP
All config values apart from the \f[I]start\f[] value are optional.
.SS Adhoc usage
.PP
Using the \f[I]\-\-run\f[] argument you may specify an executable in an
\[aq]adhoc\[aq] fashion without using a configuration file at all:
.IP
.nf
\f[C]
nyx\ \-\-run\ \[aq]mongod\ \-f\ /etc/mongod.conf\[aq]
\f[]
.fi
.PP
Using this operation all configuration values are set to the appropriate
default values.
.SH EXIT STATUS
.PP
On successful invocation the exit status is 0.
In case of an error the status codes are the following:
.TP
.B 0
success
.RS
.RE
.TP
.B 1
general failure (i.e.
out of memory)
.RS
.RE
.TP
.B 2
invalid usage (i.e.
too few arguments)
.RS
.RE
.TP
.B 3
invalid configuration
.RS
.RE
.TP
.B 4
no command given
.RS
.RE
.TP
.B 5
command does not exist
.RS
.RE
.TP
.B 6
command execution failed (i.e.
unknown watch)
.RS
.RE
.TP
.B 7
another nyx instance is already running
.RS
.RE
.TP
.B 8
no valid watch configured
.RS
.RE
.TP
.B 9
cannot open/find any directory to store PID files into
.RS
.RE
.TP
.B 10
failed to daemonize the nyx process
.RS
.RE
.TP
.B 11
no running daemon found to communicate with
.RS
.RE
.SH SEE ALSO
.PP
\f[C]syslog\f[] (3).
.PP
The nyx source code can be found on github at
<https://github.com/kongo2002/nyx/>.
.SH AUTHORS
Gregor Uhlenheuer.
